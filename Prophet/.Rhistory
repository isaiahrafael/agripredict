source("C:/Users/thisi/Downloads/ExtractExploreStudent.R")
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R")
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R")
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R")
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R")
data(iris)
str(iris)
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R")
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R")
iris_pre <- predict(tree.iris, type = 'class')
table(iris_pre,iris$Species)
plot(tree.iris)
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R")
#creditData <- read.csv('CreditData.csv', stringsAsFactors = TRUE)
creditData <- iris
str(creditData)
#### Using Function Tree to Create Decision Tree ####
tree.credit = tree(Species~., data=creditData)
data(iris)
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R", echo=TRUE)
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R", echo=TRUE)
str(iris)
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R", echo=TRUE)
library(tree)
source("C:/Users/thisi/Downloads/ExtractExploreStudent.R", echo=TRUE)
setwd("C:\\Users\\thisi\\Desktop\\SchoolR)
getwd()
ls
ls()
.libPaths()
install.packages('C:\\gurobi1102\\win64\\R', repos=NULL)
install.packages('C:\\gurobi1102\\win64\\R', repos=NULL)
install.packages('C:\\gurobi1102\\win64\\R', repos=NULL)
version
update.packages(checkBuilt = TRUE, ask = FALSE)
version
install.packages("C:\\gurobi1102\\win64\\R", repos = NULL)
install.packages("C:\\gurobi1102\\win64\\R\\gurobi_11.0-2.zip", repos = NULL)
library(Matrix)
source("C:/gurobi1102/win64/examples/R/lp.R", echo=TRUE)
source("C:/gurobi1102/win64/examples/R/lp.R")
# Copyright 2024, Gurobi Optimization, LLC
#
# This example formulates and solves the following simple LP model:
#  maximize
#        x + 2 y + 3 z
#  subject to
#        x +   y       <= 1
#              y +   z <= 1
install.packages(slam)
# Copyright 2024, Gurobi Optimization, LLC
#
# This example formulates and solves the following simple LP model:
#  maximize
#        x + 2 y + 3 z
#  subject to
#        x +   y       <= 1
#              y +   z <= 1
install.packages('slam')
source("C:/gurobi1102/win64/examples/R/lp.R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("C:/Users/thisi/Desktop/msohw.R")
source("C:/Users/thisi/Desktop/msohw.R")
source("C:/Users/thisi/Desktop/msohw.R")
source("C:/Users/thisi/Desktop/msohw.R")
source("C:/Users/thisi/Desktop/msohw.R")
getwd()
setwd("C:\\Users\\thisi\\Desktop\\MSO forecast")
source("C:/Users/thisi/Desktop/MSO forecast/Fix Dates.R")
source("C:/Users/thisi/Desktop/MSO forecast/Fix Dates.R")
source("C:/Users/thisi/Desktop/MSO forecast/Fix Dates.R")
install_tensorflow()
source("C:/Users/thisi/Desktop/MSO forecast/MSO forecast tensorflow.R")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("C:/Users/thisi/Desktop/MSO forecast/MSO forecast tensorflow.R")
tensorflow::install_tensorflow()
